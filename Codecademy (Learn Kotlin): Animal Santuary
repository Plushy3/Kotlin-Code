fun main() {
  // Write your code below üèû
  val responsibilities = listOf("feed the chimps", "play a random game", "conduct a health check on Foxie")
  var responsibilitiesComplete = 0
  var timeSpent = 0
  val totalShiftTime = 4
  val foxiesHealthCheck = mutableMapOf<String, Any?>()
  var chimpsHaveEaten = mutableMapOf("Bonnie" to false, "Jubilee" to false, "Frodo" to false, "Foxie" to false) 
  println("First, ${responsibilities[0]}")
  println("Feeding Bonnie...")
  chimpsHaveEaten["Bonnie"] = true
  println("Feeding Jubilee...")
  chimpsHaveEaten["Jubilee"] = true
  println("Feeding Frodo...")
  chimpsHaveEaten["Frodo"] = true
  println("Feeding Foxie...")
  chimpsHaveEaten["Foxie"] = true
  timeSpent += 1
  responsibilitiesComplete += 1
  println("All chimps have now been fed! You've completed $responsibilitiesComplete / ${responsibilities.size} responsibilities")
  println("Next, ${responsibilities[1]}")
  var games = mutableSetOf("tug-of-war with a blanket", "catch and throw", "number game")
  var randomGame = games.random()
  println("$randomGame")
  timeSpent ++
  responsibilitiesComplete ++
  println("Each chimp has now played a game of $randomGame! You've completed $responsibilitiesComplete / ${responsibilities.size} responsibilities.")
  println("Next, ${responsibilities[2]}")
  foxiesHealthCheck["temperature"] = 32.7
  foxiesHealthCheck["mood"] = "happy"
  println("Foxie has a temperature of ${foxiesHealthCheck["temperature"]} and is feeling ${foxiesHealthCheck["mood"]}")
  timeSpent ++
  responsibilitiesComplete ++
  if (timeSpent <= totalShiftTime &&
    responsibilitiesComplete == responsibilities.size) {
      println("Congratulations! a Great Job ... all responsibilities complete")
  } else if (timeSpent >= totalShiftTime &&
    responsibilitiesComplete == responsibilities.size) {
      println("All resposibilities complete, but with overtime")
  } else {
    println("Responsibilities not complete and took extra time")
  }
  }
